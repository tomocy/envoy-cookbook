admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
static_resources:
  listeners:
  - name: http
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: backend
              domains:
              - 'example.com'
              routes:
              - match:
                  prefix: /
                redirect:
                  https_redirect: true
                  path_redirect: /
          http_filters:
          - name: envoy.filters.http.router
  - name: https
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: backend
              domains:
              - 'example.com'
              routes:
              - match:
                  prefix: /
                route:
                  cluster: service
          http_filters:
          - name: envoy.filters.http.router
  clusters:
  - name: service
    type: STRICT_DNS
    connect_timeout: 0.25s
    transport_socket:
      name: envoy.transport_socket.tls
      typed_config:
        '@type': type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
        common_tls_context:
          tls_certificates:
          - certificate_chain:
              filename: /etc/envoy/certs/server.crt
            private_key:
              filename: /etc/envoy/certs/server.key
    load_assignment:
      cluster_name: service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1
                port_value: 80
        - endpoint:
            address:
              socket_address:
                address: service2
                port_value: 80